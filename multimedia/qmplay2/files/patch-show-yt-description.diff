diff --git a/src/gui/DemuxerThr.cpp b/src/gui/DemuxerThr.cpp
index ddbc05e0..5765d4a3 100644
--- a/src/gui/DemuxerThr.cpp
+++ b/src/gui/DemuxerThr.cpp
@@ -28,6 +28,7 @@
 #include <Demuxer.hpp>
 #include <Decoder.hpp>
 #include <Reader.hpp>
+#include <YouTubeDL.hpp>
 
 #include <QCryptographicHash>
 #include <QCoreApplication>
@@ -792,6 +793,7 @@ void DemuxerThr::addSubtitleStream(bool currentPlaying, QString &subtitlesStream
         streamMenuText.push_back(" - " + title);
     addStreamsMenuString(streamsMenu, streamCountStr, streamLink, currentPlaying, streamMenuText);
 }
+
 void DemuxerThr::emitInfo()
 {
     QString info;
@@ -857,6 +859,19 @@ void DemuxerThr::emitInfo()
     if (demuxer->bitrate() > 0)
         info += "<b>" + tr("Bitrate") + ":</b> " + QString::number(demuxer->bitrate()) + "kbps<br/>";
     info += "<b>" + tr("Format") + ":</b> " + demuxer->name();
+    //description
+    auto youTubeDL = ioCtrl.toPtr<YouTubeDL>();
+    if (youTubeDL && *youTubeDL) {
+        auto desc = (*youTubeDL)->description().split("\n");
+        if (!desc.isEmpty()) {
+            auto line = desc.takeFirst();
+            info += "<br><b>" + tr("Description") + ":</b> " + line;
+            while (!desc.isEmpty()) {
+                line = desc.takeFirst();
+                info += "<br>&nbsp;&nbsp;" + line;
+            }
+        }
+    }
 
     if (!demuxer->image().isNull())
         info += "<br/><br/><a href='save_cover'>" + tr("Save cover picture") + "</a>";
diff --git a/src/modules/Extensions/YouTube.cpp b/src/modules/Extensions/YouTube.cpp
index 9f5a90be..900f4934 100644
--- a/src/modules/Extensions/YouTube.cpp
+++ b/src/modules/Extensions/YouTube.cpp
@@ -462,7 +462,7 @@ void YouTube::convertAddress(const QString &prefix, const QString &url, const QS
                 if (extension)
                     *extension = youTubeVideo[1];
             }
-            youTubeDl.reset();
+//             youTubeDl.reset();
         }
     }
     else if (prefix == "youtube-dl")
@@ -1288,6 +1288,11 @@ QStringList YouTube::getYouTubeVideo(const QString &param, const QString &url, I
     }
     result += title;
 
+    const auto description = o["description"];
+    if (description != QJsonValue::Undefined) {
+        youTubeDL->setDescription(o["description"].toString());
+    }
+
     return result;
 }
 
diff --git a/src/qmplay2/YouTubeDL.cpp b/src/qmplay2/YouTubeDL.cpp
index 58cd1f13..768fd5b0 100644
--- a/src/qmplay2/YouTubeDL.cpp
+++ b/src/qmplay2/YouTubeDL.cpp
@@ -454,3 +454,13 @@ void YouTubeDL::startProcess(QStringList args)
 
     m_process.start(program, args);
 }
+
+void YouTubeDL::setDescription(const QString &desc)
+{
+    m_description = desc;
+}
+
+const QString YouTubeDL::description()
+{
+    return m_description;
+}
diff --git a/src/qmplay2/YouTubeDL.hpp b/src/qmplay2/YouTubeDL.hpp
index df967bb3..8f7594a0 100644
--- a/src/qmplay2/YouTubeDL.hpp
+++ b/src/qmplay2/YouTubeDL.hpp
@@ -44,6 +44,8 @@ public:
 
     QStringList exec(const QString &url, const QStringList &args, QString *silentErr = nullptr, bool rawOutput = false);
 
+    void setDescription(const QString &desc);
+    const QString description();
 private:
     void abort() override;
 
@@ -65,4 +67,5 @@ private:
     IOController<NetworkReply> m_reply;
     QProcess m_process;
     bool m_aborted;
+    QString m_description;
 };
