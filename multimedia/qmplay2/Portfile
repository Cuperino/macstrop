# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
set qt5.no_LTO_variant 1
PortGroup           qt5 1.0
PortGroup           cmake 1.1
PortGroup           github 1.0

name                qmplay2

description         A Qt5-based video and audio player.
long_description    QMPlay2 is a video and audio player. It can play all formats \
                    supported by FFmpeg, libmodplug (including J2B and SFX). It also \
                    supports Audio CD, raw files, Rayman 2 music and chiptunes. It \
                    contains YouTube and Prostopleer browsers.
license             LGPL-3
maintainers         gmail.com:rjvbertin openmaintainer
platforms           darwin linux

subport             ${name}-devel {
    long_description A QMPlay2 port aimed at development purposes.
}

post-install {
    ui_msg "${subport}@${version} installed"
}
post-uninstall {
    ui_msg "${subport}@${version} uninstalled"
}

if {${subport} eq "${name}"} {
    github.setup    zaps166 QMPlay2 17.12.31
    checksums       rmd160  ae99e94899d83809dd2d11c46e2faf94cc3f4a1f \
                    sha256  12675f054ed126ffbda9a96e710331f206b5fbb142967207e3653d3cef2ae45e
    replaced_by     ${name}-devel
    PortGroup       obsolete 1.0
} else {
    # after `git tag v19.09.03 -a  -m "Version 19.09.03" c42123af3d381d53c3a9035dfce72622841f557a`
    # after `git tag v19.11.06 -m "release 19.11.06" cd4153300a6d67498312362475a3b9e8ecb5076c`
    # after `git tag v19.11.26 -m "release 19.11.26" 2b97772a145671c0c64406ed52aec2f3e7fbcc7e `
    # after `git tag v19.12.04 -m "release 19.12.04" 897ce84c73a676f259cd0616be84cf8b6b767233`
    if {${os.platform} eq "darwin"} {
        if {${os.major} >= 13} {
            github.setup zaps166 QMPlay2 0bbb3f9c58c009c7e8ab15c32de3b37358ca6ed0
            # after `git tag v20.12.16 -m "release 20.12.16" 0bbb3f9c58c009c7e8ab15c32de3b37358ca6ed0`
            version     20.12.16.1
            compiler.cxx_standard 2014
        } else {
            # avoid a "bad drawable" error that's probably related to VideoToolBox (no idea
            # ATM if this is indeed only an issue systems running an OS older than 10.9).
            github.setup zaps166 QMPlay2 a9af85b093a3bdd6ef530ccc1f5cac31c4699c43
            # after `git tag v19.12.19 -m "release 19.12.19" 4977ded1621abc3cd8f0e5123f30e8334e8c8ec6`
            version     19.12.19.26
        }
    } else {
        github.setup zaps166 QMPlay2 0bbb3f9c58c009c7e8ab15c32de3b37358ca6ed0
        # after `git tag v20.12.16 -m "release 20.12.16" 0bbb3f9c58c009c7e8ab15c32de3b37358ca6ed0`
        version     20.12.16.1
        compiler.cxx_standard 2014
    }
    # this port is intended to facilitate development efforts shared with "upstreams"
    # so using git instead of a tarball fetch type is more appropriate.
    fetch.type      git
    distname        qmplay2-git
}

cmake.save_configure_cmd "log too"

configure.args-append \
                    -DCMAKE_BUILD_WITH_INSTALL_RPATH:BOOL=ON \
                    -DUSE_QT5=ON \
                    -DUSE_FFMPEG_AVDEVICE=ON \
                    -DUSE_CUVID=ON \
                    -DUSE_JEMALLOC=ON \
                    -DCMAKE_STRIP:FILEPATH=/bin/echo

if {![variant_exists LTO]} {
    variant LTO description {Build with link-time optimisation} {}
}
if {[variant_isset LTO]} {
    configure.args-append \
                    -DUSE_LINK_TIME_OPTIMIZATION=ON
}

if {[variant_exists qt5stock_kde] && [variant_isset qt5stock_kde]} {
    cmake_share_module_dir \
                    "[lindex $qt_cmake_module_dir 0]\;[lindex $cmake_share_module_dir 0]"
    post-destroot {
        file rename ${destroot}${prefix}/bin/QMPlay2 ${destroot}${prefix}/bin/QMPlay2.bin
        qt5.add_app_wrapper QMPlay2 QMPlay2.bin
    }
}

if {${os.platform} ne "darwin"} {
    cmake.install_rpath-prepend \
                    ${qt_libs_dir}
    # activate portaudio support on Linux too
    configure.args-append \
                    -DUSE_PORTAUDIO=ON \
                    -DFIND_HWACCEL_DRIVERS_PATH=ON
    # don't use the buildsystem's rpath support
    # (it will install only a single path)
    configure.args-append \
                    -DSET_INSTALL_RPATH=OFF
    variant libcxx description {highly experimental option to build against libc++. \
            Requires using clang and an independently provided libc++ installation.} {}
    if {[variant_isset libcxx]} {
        configure.cxx_stdlib \
                        libc++
        configure.cxxflags-delete \
                    -stdlib=libstdc++
        configure.cxxflags-append \
                    -stdlib=libc++
    }
}

qt5.depends_component \
                    qtsvg qttools
depends_lib-append  port:ffmpeg \
                    port:portaudio \
                    port:jemalloc

patch.pre_args      -Np1
if {${os.platform} ne "darwin" || ${os.major} >= 13} {
    patchfiles-append \
                    future/patch-macports-build.diff
} else {
    patchfiles-append \
                    patch-macports-build.diff
}

if {${subport} eq "${name}"} {
    # add support for outputting bit-perfect audio (adapt output device SR, don't resample content) (WIP)
    patchfiles-append   patch-bitperfect.diff
} else {
    # nothing here now
}

# restore the support for disabling iTimes; it should still work on OS versions < 10.12.4
patchfiles-append   patch-restore-itunes-disable.diff

# make sure Qt logging messages don't get lost when running from the app bundle
patchfiles-append   patch-log-to-syslog.diff
# patchfiles-append   patch-restore-ytdl.diff

if {[file exists ${filespath}/patch-temp-fixes.diff]} {
    patchfiles-append \
                    patch-temp-fixes.diff
}

# reintroduce support for Qt 5.9:
patchfiles-append   patch-support-qt59.diff

post-patch {
    reinplace "s|@PREFIX@|${prefix}|g" ${worksrcpath}/src/gui/CMakeLists.txt
}

platform darwin {
    ## build system is set up to create a standalone, all-inclusive app bundle!
    depends_lib-append \
                    port:libass \
                    port:taglib \
                    port:libcdio \
                    port:libcddb

    configure.args-append \
                    -DUSE_PULSEAUDIO=OFF \
                    -DBUNDLE_INSTALL_DIR=${qt_apps_dir} \
                    -DUSE_XVIDEO=OFF
    post-destroot {
        file rename ${destroot}${qt_apps_dir}/QMPlay2.app/Contents/MacOS/libqmplay2.dylib ${destroot}${prefix}/lib/
        # install a wrapper script in ${prefix}/bin
        if {[info procs "qt5.add_app_wrapper"] ne ""} {
            qt5.add_app_wrapper QMPlay2
        } else {
            system "echo \"#!/bin/sh\nexec \\\"${qt_apps_dir}/QMPlay2.app/Contents/MacOS/QMPlay2\\\" \\\"\\\$\@\\\"\" > ${destroot}${prefix}/bin/QMPlay2"
            system "chmod 755 ${destroot}${prefix}/bin/QMPlay2"
        }
    }
}
