# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           github 1.0
PortGroup           qmake5 1.0

fetch.type          git
github.setup        RaspberryPiFan arora 52c13a88338573598f3330899ad210f07ab96b3c
version             0.11.0.37
distname            ${name}-git
worksrcdir          ${distname}
categories          www aqua
platforms           darwin linux
maintainers         nomaintainer
license             GPL-2

description         cross-platform QtWebKit web browser

long_description    Arora is a free lightweight cross-platform web browser based \
                    on QtWebKit.

qt5.depends_component \
                    qtdeclarative qtscript qtsensors qtwebchannel

depends_lib-append  path:lib/libssl.dylib:openssl \
                    path:${qt_pkg_config_dir}/Qt5WebKit.pc:qt5-webkit

universal_variant   no

post-extract {
    # the mainstream qmake5 PG assumes qt5.top_level exists but doesn't check.
    # it'll fail for ports like us intending to do an out-of-tree build.
    # Create the directory now (it's needed in the pre-configure).
    xinstall -m 755 -d ${qt5.top_level}
}

# disable all build system tweaks as they interfere with The MacPorts Way (tm).
patch.pre_args      -Np1
patchfiles-append   patch-build-ala-macports.diff \
                    patch-translation-locations.diff \
                    patch-add_enGB.diff

# the mainstream qmake5 PG also doesn't respect configure.ldflags
default qt5.ldflags {${configure.ldflags}}

default configure.dir \
                    {${workpath}/build}
default build.dir   {${workpath}/build}
configure.pre_args-append \
                    ../${worksrcdir}/${name}.pro
configure.post_args-append \
                    -r -cache ${build.dir}/.qmake.cache

if {[variant_exists qt5kde] && [variant_isset qt5kde]} {
    qt5.unset_cxxflags  -O2
    qmake5.save_configure_cmd "log too"
}

if {[info exists langselect_qm_dir]} {
    if {${os.platform} eq "darwin"} {
        langselect_qm_dir "${build.dir}/src/.qm/locale"
    } else {
        langselect_qm_dir ${destroot}${prefix}/share/${name}/locale
    }
}

post-destroot {
    if {${os.platform} eq "darwin"} {
        xinstall -m 755 -d ${destroot}${qt_apps_dir}
        file rename ${destroot}${prefix}/bin/Arora.app ${destroot}${qt_apps_dir}/Arora.app
        xinstall -m 755 -d ${destroot}${qt_apps_dir}/Arora.app/Contents/Resources/
        file copy -force ${build.dir}/src/.qm/locale ${destroot}${qt_apps_dir}/Arora.app/Contents/Resources/locale
        qt5.add_app_wrapper arora Arora
    } else {
        file rename ${destroot}${prefix}/bin/arora ${destroot}${prefix}/bin/arora.bin
        qt5.add_app_wrapper arora arora.bin
    }
}
