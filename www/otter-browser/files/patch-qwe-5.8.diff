diff --git a/CMakeLists.txt b/CMakeLists.txt
index 5829a66fb6e039b270933c48ac628ef6296ff301..ba31dc3bec878d788159b5eb045d89649416688e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -75,7 +75,7 @@ option(ENABLE_DBUS "Enable D-Bus based integration for notifications (only freed
 option(ENABLE_SPELLCHECK "Enable Hunspell based spell checking" ON)
 
 find_package(Qt5 5.6.0 REQUIRED COMPONENTS Core Gui Multimedia Network PrintSupport Qml Svg Widgets)
-find_package(Qt5WebEngineWidgets 5.15.0 QUIET)
+find_package(Qt5WebEngineWidgets 5.8.0 QUIET)
 find_package(Qt5WebKitWidgets 5.212.0 QUIET)
 find_package(Hunspell 1.5.0 QUIET)
 
diff --git a/src/modules/backends/web/qtwebengine/QtWebEnginePage.cpp b/src/modules/backends/web/qtwebengine/QtWebEnginePage.cpp
index 7fc90ae891d2523737d51df17e5975c742802a35..df5da2248a57f71ca67705efde2b06849d38b654 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEnginePage.cpp
+++ b/src/modules/backends/web/qtwebengine/QtWebEnginePage.cpp
@@ -596,6 +596,7 @@ bool QtWebEnginePage::acceptNavigationRequest(const QUrl &url, NavigationType ty
 	return true;
 }
 
+#if QTWEBENGINECORE_VERSION >= 0x050E00
 bool QtWebEnginePage::certificateError(const QWebEngineCertificateError &error)
 {
 	if (!m_widget || error.certificateChain().isEmpty())
@@ -626,6 +627,7 @@ bool QtWebEnginePage::certificateError(const QWebEngineCertificateError &error)
 
 	return false;
 }
+#endif
 
 bool QtWebEnginePage::javaScriptConfirm(const QUrl &url, const QString &message)
 {
diff --git a/src/modules/backends/web/qtwebengine/QtWebEnginePage.h b/src/modules/backends/web/qtwebengine/QtWebEnginePage.h
index 3c3d0e9be074b4833fd9db36b304d2f566524d69..624ad17c0e23444ed16a4121d707115ce6e631b4 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEnginePage.h
+++ b/src/modules/backends/web/qtwebengine/QtWebEnginePage.h
@@ -69,7 +69,9 @@ protected:
 	QString createJavaScriptList(const QStringList &rules) const;
 	QStringList chooseFiles(FileSelectionMode mode, const QStringList &oldFiles, const QStringList &acceptedMimeTypes) override;
 	bool acceptNavigationRequest(const QUrl &url, NavigationType type, bool isMainFrame) override;
+#if QTWEBENGINECORE_VERSION >= 0x050E00
 	bool certificateError(const QWebEngineCertificateError &error) override;
+#endif
 	bool javaScriptConfirm(const QUrl &url, const QString &message) override;
 	bool javaScriptPrompt(const QUrl &url, const QString &message, const QString &defaultValue, QString *result) override;
 
diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineResources.qrc b/src/modules/backends/web/qtwebengine/QtWebEngineResources.qrc
index cc31d302c85a413ba099cc39113703d5376cd216..301f1fd1f26c51c811ea0bb7e0c5d360ed61044b 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineResources.qrc
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineResources.qrc
@@ -8,5 +8,6 @@
         <file>resources/hideBlockedRequests.js</file>
         <file>resources/hitTest.js</file>
         <file>resources/imageViewer.js</file>
+        <file>resources/sendPost.js</file>
     </qresource>
 </RCC>
diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.cpp b/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.cpp
index ed485174354b6bd26f308909f0f61833809cc94b..0ad85149ad9e0391181a3ccbf10eb1a286246727 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.cpp
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.cpp
@@ -71,6 +71,7 @@ void QtWebEngineWebBackend::handleDownloadRequested(QWebEngineDownloadItem *item
 		return;
 	}
 
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 	QtWebEnginePage *page(qobject_cast<QtWebEnginePage*>(item->page()));
 
 	if (page && page->getWebWidget())
@@ -79,6 +80,7 @@ void QtWebEngineWebBackend::handleDownloadRequested(QWebEngineDownloadItem *item
 
 		return;
 	}
+#endif
 
 	const HandlersManager::MimeTypeHandlerDefinition handler(HandlersManager::getMimeTypeHandler(transfer->getMimeType()));
 
@@ -152,7 +154,9 @@ void QtWebEngineWebBackend::handleOptionChanged(int identifier)
 
 			return;
 		case SettingsManager::Network_EnableDnsPrefetchOption:
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 			QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::DnsPrefetchEnabled, SettingsManager::getOption(SettingsManager::Network_EnableDnsPrefetchOption).toBool());
+#endif
 
 			return;
 		case SettingsManager::Network_UserAgentOption:
@@ -189,6 +193,7 @@ void QtWebEngineWebBackend::handleOptionChanged(int identifier)
 	}
 }
 
+#if QTWEBENGINECORE_VERSION >= 0x050D00
 void QtWebEngineWebBackend::showNotification(std::unique_ptr<QWebEngineNotification> nativeNotification)
 {
 	Notification::Message message;
@@ -213,6 +218,7 @@ void QtWebEngineWebBackend::showNotification(std::unique_ptr<QWebEngineNotificat
 	connect(notification, &Notification::ignored, nativeNotification.get(), &QWebEngineNotification::close);
 	connect(nativeNotification.get(), &QWebEngineNotification::closed, notification, &Notification::requestClose);
 }
+#endif
 
 WebWidget* QtWebEngineWebBackend::createWidget(const QVariantMap &parameters, ContentsWidget *parent)
 {
@@ -224,10 +230,14 @@ WebWidget* QtWebEngineWebBackend::createWidget(const QVariantMap &parameters, Co
 
 		QWebEngineProfile::defaultProfile()->setHttpAcceptLanguage(NetworkManagerFactory::getAcceptLanguage());
 		QWebEngineProfile::defaultProfile()->setHttpUserAgent(getUserAgent());
+#if QTWEBENGINECORE_VERSION >= 0x050D00
 		QWebEngineProfile::defaultProfile()->setDownloadPath(SettingsManager::getOption(SettingsManager::Paths_DownloadsOption).toString());
 		QWebEngineProfile::defaultProfile()->setNotificationPresenter(&QtWebEngineWebBackend::showNotification);
+#endif
 
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 		QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::DnsPrefetchEnabled, SettingsManager::getOption(SettingsManager::Network_EnableDnsPrefetchOption).toBool());
+#endif
 		QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::FullScreenSupportEnabled, true);
 		QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::FocusOnNavigationEnabled, false);
 		QWebEngineSettings::globalSettings()->setAttribute(QWebEngineSettings::XSSAuditingEnabled, true);
diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.h b/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.h
index 1174882d859b85812907eb4639c7087664e84985..d32ba59063915bcad50d4529c628f3e2ca531626 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.h
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineWebBackend.h
@@ -23,7 +23,9 @@
 
 #include "../../../../core/WebBackend.h"
 
+#if QTWEBENGINECORE_VERSION >= 0x050D00
 #include <QtWebEngineCore/QWebEngineNotification>
+#endif
 #include <QtWebEngineWidgets/QWebEngineDownloadItem>
 
 #include <memory>
@@ -54,7 +56,9 @@ public:
 	bool hasSslSupport() const override;
 
 protected:
+#if QTWEBENGINECORE_VERSION >= 0x050D00
 	static void showNotification(std::unique_ptr<QWebEngineNotification> nativeNotification);
+#endif
 
 protected slots:
 	void handleDownloadRequested(QWebEngineDownloadItem *item);
diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineTransfer.cpp b/src/modules/backends/web/qtwebengine/QtWebEngineTransfer.cpp
index dddf874d2dfd70cd72588526dd197cfc9affaa94..eb9161eaf99b34f89dba893c0b83905d3924f77d 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineTransfer.cpp
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineTransfer.cpp
@@ -79,22 +79,30 @@ QUrl QtWebEngineTransfer::getSource() const
 
 QString QtWebEngineTransfer::getSuggestedFileName()
 {
+#if QTWEBENGINECORE_VERSION >= 0x050D00
 	if (!m_item)
 	{
 		return {};
 	}
 
 	return m_item->suggestedFileName();
+#else
+	return {};
+#endif
 }
 
 QString QtWebEngineTransfer::getTarget() const
 {
+#if QTWEBENGINECORE_VERSION >= 0x050D00
 	if (!m_item)
 	{
 		return Transfer::getTarget();
 	}
 
 	return QDir(m_item->downloadDirectory()).absoluteFilePath(m_item->downloadFileName());
+#else
+	return Transfer::getTarget();
+#endif
 }
 
 QMimeType QtWebEngineTransfer::getMimeType() const
@@ -159,8 +167,10 @@ bool QtWebEngineTransfer::setTarget(const QString &target, bool canOverwriteExis
 
 	QFileInfo fileInformation(target);
 
+#if QTWEBENGINECORE_VERSION >= 0x050D00
 	m_item->setDownloadDirectory(fileInformation.path());
 	m_item->setDownloadFileName(fileInformation.fileName());
+#endif
 
 	return true;
 }
diff --git a/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp b/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
index 720e86555dd2da96d566e55ba1a4c71d60be7e9f..4fe453e1540484533982c9f50ceadedb2d24f4f6 100644
--- a/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
+++ b/src/modules/backends/web/qtwebengine/QtWebEngineWebWidget.cpp
@@ -52,13 +52,18 @@
 #include <QtGui/QImageWriter>
 #include <QtPrintSupport/QPrintPreviewDialog>
 #include <QtWebEngineCore/QWebEngineCookieStore>
+#if QTWEBENGINECORE_VERSION >= 0x050E00
 #include <QtWebEngineCore/QWebEngineFindTextResult>
+#endif
 #include <QtWebEngineWidgets/QWebEngineHistory>
 #include <QtWebEngineWidgets/QWebEngineProfile>
 #include <QtWebEngineWidgets/QWebEngineScript>
 #include <QtWebEngineWidgets/QWebEngineSettings>
 #include <QtWidgets/QAction>
 #include <QtWidgets/QVBoxLayout>
+#if QTWEBENGINECORE_VERSION < 0x050900
+#include <QtCore/QFile>
+#endif
 
 namespace Otter
 {
@@ -76,10 +81,12 @@ QtWebEngineInspectorWidget::QtWebEngineInspectorWidget(QWebEnginePage *inspected
 
 void QtWebEngineInspectorWidget::showEvent(QShowEvent *event)
 {
+#if QTWEBENGINECORE_VERSION >= 0x050B00
 	if (!page()->inspectedPage())
 	{
 		page()->setInspectedPage(m_inspectedPage);
 	}
+#endif
 
 	QWebEngineView::showEvent(event);
 }
@@ -100,7 +107,9 @@ QtWebEngineWebWidget::QtWebEngineWebWidget(const QVariantMap &parameters, WebBac
 {
 	setFocusPolicy(Qt::StrongFocus);
 
+#if QTWEBENGINECORE_VERSION >= 0x050D00
 	m_page->setUrlRequestInterceptor(m_requestInterceptor);
+#endif
 
 	connect(m_page, &QtWebEnginePage::loadProgress, [&](int progress)
 	{
@@ -117,7 +126,9 @@ QtWebEngineWebWidget::QtWebEngineWebWidget(const QVariantMap &parameters, WebBac
 	connect(m_page, &QtWebEnginePage::requestedNewWindow, this, &QtWebEngineWebWidget::requestedNewWindow);
 	connect(m_page, &QtWebEnginePage::authenticationRequired, this, &QtWebEngineWebWidget::handleAuthenticationRequired);
 	connect(m_page, &QtWebEnginePage::proxyAuthenticationRequired, this, &QtWebEngineWebWidget::handleProxyAuthenticationRequired);
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 	connect(m_page, &QtWebEnginePage::printRequested, this, &QtWebEngineWebWidget::handlePrintRequest);
+#endif
 	connect(m_page, &QtWebEnginePage::windowCloseRequested, this, &QtWebEngineWebWidget::handleWindowCloseRequest);
 	connect(m_page, &QtWebEnginePage::fullScreenRequested, this, &QtWebEngineWebWidget::handleFullScreenRequest);
 	connect(m_page, &QtWebEnginePage::featurePermissionRequested, [&](const QUrl &url, QWebEnginePage::Feature feature)
@@ -128,10 +139,12 @@ QtWebEngineWebWidget::QtWebEngineWebWidget(const QVariantMap &parameters, WebBac
 	{
 		notifyPermissionRequested(url, feature, true);
 	});
+#if QTWEBENGINECORE_VERSION >= 0x050E00
 	connect(m_page, &QtWebEnginePage::findTextFinished, [&](const QWebEngineFindTextResult &result)
 	{
 		emit findInPageResultsChanged(m_findInPageText, result.numberOfMatches(), result.activeMatch());
 	});
+#endif
 	connect(m_page, &QtWebEnginePage::recentlyAudibleChanged, this, &QtWebEngineWebWidget::isAudibleChanged);
 	connect(m_page, &QtWebEnginePage::viewingMediaChanged, this, &QtWebEngineWebWidget::notifyNavigationActionsChanged);
 	connect(m_page, &QtWebEnginePage::titleChanged, this, &QtWebEngineWebWidget::notifyTitleChanged);
@@ -793,6 +806,7 @@ void QtWebEngineWebWidget::triggerAction(int identifier, const QVariantMap &para
 			break;
 		case ActionsManager::InspectPageAction:
 			{
+#if QTWEBENGINECORE_VERSION >= 0x050B00
 				const bool showInspector(parameters.value(QLatin1String("isChecked"), !getActionState(identifier, parameters).isChecked).toBool());
 
 				if (showInspector && !m_inspectorWidget)
@@ -802,6 +816,7 @@ void QtWebEngineWebWidget::triggerAction(int identifier, const QVariantMap &para
 
 				emit requestedInspectorVisibilityChange(showInspector);
 				emit arbitraryActionsStateChanged({ActionsManager::InspectPageAction});
+#endif
 			}
 
 			break;
@@ -897,10 +912,21 @@ void QtWebEngineWebWidget::search(const QString &query, const QString &searchEng
 
 		if (searchQuery.method == QNetworkAccessManager::PostOperation)
 		{
+#if QTWEBENGINECORE_VERSION < 0x050900
+			QFile file(QLatin1String(":/modules/backends/web/qtwebengine/resources/sendPost.js"));
+
+			if (file.open(QIODevice::ReadOnly))
+			{
+				m_page->runJavaScript(QString(file.readAll()).arg(searchQuery.request.url().toString()).arg(QString(searchQuery.body)));
+
+				file.close();
+			}
+#else
 			QWebEngineHttpRequest httpRequest(searchQuery.request.url(), QWebEngineHttpRequest::Post);
 			httpRequest.setPostData(searchQuery.body);
 
 			m_page->load(httpRequest);
+#endif
 		}
 		else
 		{
@@ -989,6 +1015,7 @@ void QtWebEngineWebWidget::handleViewSourceReplyFinished()
 
 void QtWebEngineWebWidget::handlePrintRequest()
 {
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 	QPrintPreviewDialog printPreviewDialog(this);
 	printPreviewDialog.setWindowFlags(printPreviewDialog.windowFlags() | Qt::WindowMaximizeButtonHint | Qt::WindowMinimizeButtonHint);
 	printPreviewDialog.setWindowTitle(tr("Print Preview"));
@@ -1011,6 +1038,7 @@ void QtWebEngineWebWidget::handlePrintRequest()
 	});
 
 	printPreviewDialog.exec();
+#endif
 }
 
 void QtWebEngineWebWidget::handleAuthenticationRequired(const QUrl &url, QAuthenticator *authenticator)
@@ -1198,12 +1226,16 @@ void QtWebEngineWebWidget::updateOptions(const QUrl &url)
 	QWebEngineSettings *settings(m_page->settings());
 	settings->setAttribute(QWebEngineSettings::AllowRunningInsecureContent, getOption(SettingsManager::Security_AllowMixedContentOption, url).toBool());
 	settings->setAttribute(QWebEngineSettings::AutoLoadImages, (getOption(SettingsManager::Permissions_EnableImagesOption, url).toString() != QLatin1String("onlyCached")));
+#if QTWEBENGINECORE_VERSION >= 0x050C00
 	settings->setAttribute(QWebEngineSettings::DnsPrefetchEnabled, getOption(SettingsManager::Network_EnableDnsPrefetchOption, url).toBool());
+#endif
 	settings->setAttribute(QWebEngineSettings::JavascriptEnabled, getOption(SettingsManager::Permissions_EnableJavaScriptOption, url).toBool());
 	settings->setAttribute(QWebEngineSettings::JavascriptCanAccessClipboard, getOption(SettingsManager::Permissions_ScriptsCanAccessClipboardOption, url).toBool());
 	settings->setAttribute(QWebEngineSettings::JavascriptCanOpenWindows, (getOption(SettingsManager::Permissions_ScriptsCanOpenWindowsOption, url).toString() != QLatin1String("blockAll")));
 	settings->setAttribute(QWebEngineSettings::LocalStorageEnabled, getOption(SettingsManager::Permissions_EnableLocalStorageOption, url).toBool());
+#if QTWEBENGINECORE_VERSION >= 0x050A00
 	settings->setAttribute(QWebEngineSettings::ShowScrollBars, getOption(SettingsManager::Interface_ShowScrollBarsOption, url).toBool());
+#endif
 	settings->setAttribute(QWebEngineSettings::WebGLEnabled, getOption(SettingsManager::Permissions_EnableWebglOption, url).toBool());
 	settings->setDefaultTextEncoding((encoding == QLatin1String("auto")) ? QString() : encoding);
 
diff --git a/src/modules/backends/web/qtwebengine/resources/sendPost.js b/src/modules/backends/web/qtwebengine/resources/sendPost.js
new file mode 100644
index 0000000000000000000000000000000000000000..c3683521d51bba02b5447c281a24b0b754bd10a1
--- /dev/null
+++ b/src/modules/backends/web/qtwebengine/resources/sendPost.js
@@ -0,0 +1,18 @@
+var form = document.createElement('form');
+form.setAttribute('method', 'post');
+form.setAttribute('action', '%1');
+
+var parameters = '%2'.split('&');
+
+for (var i = 0; i < parameters.length; ++i)
+{
+	var parameter = parameters[i].split('=');
+	var input = document.createElement('input');
+	input.setAttribute('type', 'hidden');
+	input.setAttribute('name', parameter[0]);
+	input.setAttribute('value', decodeURIComponent(parameter[1]));
+
+	form.appendChild(input);
+}
+
+form.submit();
