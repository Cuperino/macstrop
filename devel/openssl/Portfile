# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           muniversal 1.0
PortGroup           LTO 1.0

set basename        openssl
epoch               1
version             1.1.1k
set branch          [join [lrange [split ${version} .] 0 1] .]
set suffix          [join [split ${branch} .] ""]
name                ${basename}

# Please revbump these ports when updating OpenSSL.
#  - freeradius (#43461)
#  - openssh (#54990)

categories          devel security
platforms           darwin
license             OpenSSL SSLeay
maintainers         {larryv @larryv} {cal @neverpanic} openmaintainer

description         OpenSSL SSL/TLS cryptography library
long_description    The OpenSSL Project is a collaborative effort to \
                    develop a robust, commercial-grade, full-featured, \
                    and Open Source toolkit implementing the Secure \
                    Sockets Layer (SSL v2/v3) and Transport Layer \
                    Security (TLS v1) protocols as well as \
                    a full-strength general purpose cryptography \
                    library.
homepage            https://www.openssl.org

if {${name} eq "openssl"} {
    conflicts       libressl libressl-devel
}

####################
if {${os.platform} ne "darwin"} {
    PortGroup devport 1.0

    create_devport port:${name}

    if {${subport} eq "${name}-dev"} {
        # openssl-dev doesn't care about anything that follows,
        # return here to avoid having to add more subport checks.
        return
    }
}
####################

depends_lib         port:zlib

# See https://www.openssl.org/source/mirror.html
master_sites        ${homepage}/source \
                    ftp://gd.tuwien.ac.at/infosys/security/openssl/source/ \
                    http://mirror.switch.ch/ftp/mirror/openssl/source/ \
                    ftp://ftp.fi.muni.cz/pub/openssl/source/ \
                    ftp://ftp.pca.dfn.de/pub/tools/net/openssl/source/ \
                    http://artfiles.org/openssl.org/source/ \
                    ftp://ftp.linux.hr/pub/openssl/source/ \
                    ftp://guest.kuria.katowice.pl/pub/openssl/source/
distname            openssl-${version}

checksums           rmd160  5c9fbbeae7d115e59be705162e58195517a37cae \
                    sha256  892a0875b9872acd04a9fde79b1f943075d5ea162415de3047c327df33fbaee5 \
                    size    9823400

if {${os.platform} eq "darwin"} {
#     patchfiles      parallel-building.patch
    configure.perl  /usr/bin/perl
    configure.cmd   ./Configure
} else {
#     patchfiles      parallel-building.patch
    configure.cmd   ./config
}

if {${os.platform} eq "darwin" && ${os.major} < 11} {
    # Having the stdlib set to libc++ on 10.6 causes a dependency on a
    # macports-clang compiler to be added, which would be a dep cycle.
    configure.cxx_stdlib
}

# configure.ccache    no
configure.args     -L${prefix}/lib \
                    --openssldir=${prefix}/etc/openssl-${branch} \
                    --libdir=lib/openssl-${branch} \
                    shared \
                    zlib

# Use SDK if necessary.
if {${configure.sdkroot} ne ""} {
    configure.args-append   '-isysroot ${configure.sdkroot}' \
                            -Wl,-syslibroot,${configure.sdkroot}
}

platform darwin {
    set merger_arch_compiler no
    array set merger_configure_args {
        ppc     darwin-ppc-cc
        i386    darwin-i386-cc
        ppc64   darwin64-ppc-cc
        x86_64  darwin64-x86_64-cc
        arm64   darwin64-arm64-cc
    }
    # Don't use i386 assembly on Tiger (#38015, #43303).
    if {${os.major} <= 8} {
        append merger_configure_args(i386) { no-asm}
        # https://trac.macports.org/ticket/58992
        configure.args-append no-async
    }
    # Don't use x86-64 assembly on Tiger or Leopard.
    if {${os.major} <= 9} {
        append merger_configure_args(x86_64) { no-asm}
        # OpenSSL requires Perl 5.10.0, while Leopard ships Perl 5.8.8
        depends_build-append    port:perl5
        configure.perl          ${prefix}/bin/perl5
    }
}
# Don't pass --host to configure.
array set merger_host {ppc {} i386 {} ppc64 {} x86_64 {} arm64 {}}

if {![info exists universal_possible]} {
    set universal_possible [expr {${os.universal_supported} && [llength ${configure.universal_archs}] >= 2}]
}
if {(!${universal_possible} || ![variant_isset universal])
        && [info exists merger_configure_args(${configure.build_arch})]} {
    configure.args-append $merger_configure_args(${configure.build_arch})
}
configure.universal_args-delete --disable-dependency-tracking

# Parallel builds don't quite work (#46719).
use_parallel_build  no

# post-configure {
#     # splice in our build options
#     reinplace "s|^CFLAGS=.*|& ${configure.cflags}|g" ${worksrcpath}/Makefile
# #     reinplace "s|^SHARED_LDFLAGS=.*|& ${configure.ldflags}|g" ${worksrcpath}/Makefile
# }

test.run            yes

pre-destroot {
    if {[variant_exists universal] && [variant_isset universal]} {
        global merger_dont_diff
        if {[llength ${universal_archs_to_use}] > 2} {
            lappend merger_dont_diff ${prefix}/include/openssl/opensslconf.h
        }
    }
}

post-destroot {
    # Move some files around
    xinstall -d ${destroot}${prefix}/include/openssl-${branch}
    move ${destroot}${prefix}/include/openssl ${destroot}${prefix}/include/openssl-${branch}/
    # add a symlink that will make it possible to replace `#include <openssl/foo.h>` with
    # `#include <openssl${suffix}/foo.h>` in ports that require openssl 1.0 but pick up headers
    # from openssl 1.1 despite a `-I $prefix/include/openssl-${branch}` directive.
    ln -s openssl-${branch}/openssl ${destroot}${prefix}/include/openssl${suffix}
    move ${destroot}${prefix}/bin/openssl ${destroot}${prefix}/bin/openssl-${suffix}
    move ${destroot}${prefix}/bin/c_rehash ${destroot}${prefix}/bin/c_rehash-${suffix}

    # Update includedir in .pc files
    reinplace "s|/include$|/include/openssl-${branch}|" {*}[glob ${destroot}${prefix}/lib/openssl-${branch}/pkgconfig/*.pc]

    if {${os.platform} eq "darwin"} {
        ln -s openssl-${branch}/libcrypto.1.1.dylib ${destroot}${prefix}/lib/
        ln -s openssl-${branch}/libssl.1.1.dylib ${destroot}${prefix}/lib/
    } else {
        ln -s openssl-${branch}/libcrypto.so.1.1 ${destroot}${prefix}/lib/
        ln -s openssl-${branch}/libssl.so.1.1 ${destroot}${prefix}/lib/
    }
    if {${name} ne "openssl11"} {
        # temporary config; make the "hidden" files available where they're expected
        # by current dependents (until they're rebuilt)
        ln -s openssl-${branch}/openssl ${destroot}${prefix}/include/openssl
        ln -s openssl-${suffix} ${destroot}${prefix}/bin/openssl
        ln -s c_rehash-${suffix} ${destroot}${prefix}/bin/c_rehash
        foreach pc [glob ${destroot}${prefix}/lib/openssl-${branch}/pkgconfig/*.pc] {
            ln -s ../openssl-${branch}/pkgconfig/[file tail ${pc}] ${destroot}${prefix}/lib/pkgconfig/
        }
        if {${os.platform} eq "darwin"} {
            # these should be temporary:
            ln -s openssl-${branch}/libcrypto.dylib ${destroot}${prefix}/lib/
            ln -s openssl-${branch}/libssl.dylib ${destroot}${prefix}/lib/
        } else {
            # these should be temporary:
            ln -s openssl-${branch}/libcrypto.so ${destroot}${prefix}/lib/
            ln -s openssl-${branch}/libssl.so ${destroot}${prefix}/lib/
        }
    }

    if {[info procs create_devport_content_archive] ne ""} {
        register_devport_standard_content
        devport_content-append ${prefix}/include/openssl${suffix}
        devport_content-append ${prefix}/lib/openssl-${branch}/libssl.so
        devport_content-append ${prefix}/lib/openssl-${branch}/libcrypto.so
        devport_content-append ${prefix}/lib/openssl-${branch}/libssl.a
        devport_content-append ${prefix}/lib/openssl-${branch}/libcrypto.a
        foreach h [glob -nocomplain ${destroot}${prefix}/lib/openssl-${branch}/pkgconfig/*] {
            devport_content-append [string map [list ${destroot} ""] ${h}]
        }
        create_devport_content_archive
    }

    platform linux {
        if {[file exists /etc/ssl/certs]} {
            ln -s /etc/ssl/certs ${prefix}/etc/openssl/certs
        }
    }
}

destroot.args   MANDIR=${prefix}/share/man MANSUFFIX=ssl

variant rfc3779 description {enable RFC 3779: X.509 Extensions for IP Addresses and AS Identifiers} {
    configure.args-append   enable-rfc3779
}

livecheck.type      regex
livecheck.url       [lindex ${master_sites} 0]
livecheck.regex     ${basename}-(\[0-9.\]+\[a-z\]?)\\.tar\\.gz
