diff --git a/CMakeLists.txt b/CMakeLists.txt
index de2568eeae59a9ba348f4bf9285e9334ab779fe3..21935221e2d6fa8f06a45cfcdfcdb4342abf2f36 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -256,7 +256,7 @@ endif()
 if( APPLE )
   # These values are used within builds on MacOS to link the target
   # version of the SDK if the linker supports platform versioning
-  set( MIN_MACOS_VERSION 10.12 )
+  set( MIN_MACOS_VERSION 10.7 )
 
   # Target 10.13 to prevent high CPU usage and slow drawing on Mojave or newer
   set( TARGET_MACOS_VERSION 10.13 )
@@ -264,7 +264,7 @@ if( APPLE )
   # Define the OSX compatibility parameters
   set( CMAKE_OSX_ARCHITECTURES x86_64 CACHE INTERNAL "" )
   set( CMAKE_OSX_DEPLOYMENT_TARGET ${MIN_MACOS_VERSION} CACHE INTERNAL "" )
-  set( CMAKE_OSX_SYSROOT macosx CACHE INTERNAL "" )
+#   set( CMAKE_OSX_SYSROOT macosx CACHE INTERNAL "" )
 endif()
 
 # Add our module path
@@ -358,10 +358,15 @@ else()
 endif()
 
 # Attempt to find optional ccache program
-find_program( CCACHE_PROGRAM ccache )
-mark_as_advanced( FORCE CCACHE_PROGRAM )
-if( NOT "${CCACHE_PROGRAM}" STREQUAL "CCACHE_PROGRAM-NOTFOUND" )
-  option( CCACHE "Use ccache for compiler caching to speed up rebuilds." ON )
+# find_program( CCACHE_PROGRAM ccache )
+# mark_as_advanced( FORCE CCACHE_PROGRAM )
+# if( NOT "${CCACHE_PROGRAM}" STREQUAL "CCACHE_PROGRAM-NOTFOUND" )
+#   option( CCACHE "Use ccache for compiler caching to speed up rebuilds." ON )
+# endif()
+# Use ccache if requested
+if( ${CMAKE_CXX_COMPILER_LAUNCHER} MATCHES "ccache" )
+    set( CCACHE_PROGRAM "${CMAKE_CXX_COMPILER_LAUNCHER}" )
+    mark_as_advanced( FORCE CCACHE_PROGRAM )
 endif()
 
 # Attempt to find optional sccache program
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 83e57578d847d08fa4ac7b5b58191dfaef4e7e23..1d96e2054b3263388e5a83f762029dd0f15b4c91 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -1171,6 +1171,7 @@ elseif( CMAKE_SYSTEM_NAME MATCHES "Darwin" )
     "-framework Foundation"
     "-framework Cocoa"
     "-framework Carbon"
+    "-framework AudioToolbox"
   )
 
   if(USE_AUDIO_UNITS)
@@ -1310,6 +1311,14 @@ list( APPEND DEFINES
 target_sources( ${TARGET} PRIVATE ${HEADERS} ${SOURCES} ${RESOURCES} ${MAC_RESOURCES} ${WIN_RESOURCES} )
 target_compile_definitions( ${TARGET} PRIVATE ${DEFINES} )
 target_compile_definitions( ${TARGET} PRIVATE ${CXX_WARNINGS_SILENCE_DEFINES} )
+
+# let's see if we still need these:
+# set_property(SOURCE effects/VST/VSTEffect.cpp APPEND PROPERTY COMPILE_DEFINITIONS LIBDIR="${CMAKE_INSTALL_FULL_LIBDIR}")
+# set_property(SOURCE effects/ladspa/LadspaEffect.cpp APPEND PROPERTY COMPILE_DEFINITIONS LIBDIR="${CMAKE_INSTALL_FULL_LIBDIR}")
+# set_property(SOURCE effects/lv2/LoadLV2.cpp APPEND PROPERTY COMPILE_DEFINITIONS LIBDIR="${CMAKE_INSTALL_FULL_LIBDIR}")
+# set_property(SOURCE effects/lv2/LoadLV2.cpp APPEND PROPERTY COMPILE_DEFINITIONS PKGLIBDIR="${PKGLIBDIR}")
+# set_property(SOURCE export/ExportMP3.cpp APPEND PROPERTY COMPILE_DEFINITIONS LIBDIR="${CMAKE_INSTALL_FULL_LIBDIR}")
+
 target_compile_options( ${TARGET} PRIVATE ${OPTIONS} )
 target_include_directories( ${TARGET} PRIVATE ${INCLUDES} )
 target_link_options( ${TARGET} PRIVATE ${LDFLAGS} )
