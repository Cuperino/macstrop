# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           LTO 1.0

name                smartmontools
version             7.2
categories          sysutils
license             GPL-2+
platforms           darwin

maintainers         gmail.com:rjvbertin openmaintainer

description         SMART hard drive monitoring

long_description \
    Two utility programs (smartctl and smartd) to control and monitor \
    storage systems using the Self-Monitoring, Analysis and Reporting \
    Technology System (SMART) built into most modern ATA and SCSI hard \
    disks. In many cases, these utilities will provide advanced warning \
    of disk degradation and failure.

homepage            http://smartmontools.sourceforge.net/
master_sites        sourceforge:project/smartmontools/smartmontools/${version}/

checksums           rmd160  51a00e9ac83c5f16af20f220b129180c953385a9 \
                    sha256  5cd98a27e6393168bc6aaea070d9e1cd551b0f898c52f66b2ff2e5d274118cd6
#                     size    992256

configure.args      --with-drivedbdir=yes \
                    --without-savestates \
                    --without-attributelog \
                    --enable-sample \
                    --with-libcap-ng=no \
                    --with-scriptpath=${prefix}/bin:/usr/bin:/bin

if {${os.platform} eq "darwin"} {
    if {[string match "*libstdc\+\+" ${configure.cxx_stdlib}]} {
        compiler.blacklist *clang* apple-gcc*
        foreach clv {49 5 6 7 8 9} {
            if {[file exists ${prefix}/bin/g++-mp-${clv}]} {
                compiler.whitelist-prepend macports-gcc-${clv}
            }
            compiler.fallback-prepend macports-gcc-${clv}
        }
    }
    configure.args-append \
                    --with-cxx11-regex=yes
} else {
    configure.args-delete \
                    --with-libcap-ng=no
    configure.args-append \
                    --with-cxx11-regex=yes \
                    --with-systemdsystemunitdir=${prefix}/lib/systemd/system
}

destroot.keepdirs   ${destroot}${prefix}/var/run \
                    ${destroot}${prefix}/var/lib/smartmontools

default_variants    +savestates +attributelog

variant savestates description {Use default smartd state files} {
    configure.args-replace --without-savestates --with-savestates
}

variant attributelog description {Use default smartd attribute log files} {
    configure.args-replace --without-attributelog --with-attributelog
}

startupitem.create      yes
startupitem.name        smartd
startupitem.executable  ${prefix}/sbin/smartd -n

# kate: backspace-indents true; indent-pasted-text true; indent-width 4; keep-extra-spaces true; remove-trailing-spaces modified; replace-tabs true; replace-tabs-save true; syntax Tcl/Tk; tab-indents true; tab-width 4;
