commit 7d22031a6bd949f9357904310422901515a5ace7
Author: Jeremy Huddleston Sequoia <jeremyhu@apple.com>
Date:   Thu Feb 18 09:41:30 2021 -0800

    xquartz: Fold away array_with_strings_and_numbers and simplify with more modern Objective-C
    
    Signed-off-by: Jeremy Huddleston Sequoia <jeremyhu@apple.com>
    (cherry picked from commit 39c0e1c0ab6a0a89a71f26446973c779ca7fd927)

diff --git a/hw/xquartz/X11Application.m b/hw/xquartz/X11Application.m
index 87798180072f787dd5dd7d490750d4214888aa14..14c6c824ca10490e3fdf139a7637dc9dc378bf45 100644
--- a/hw/xquartz/X11Application.m
+++ b/hw/xquartz/X11Application.m
@@ -883,28 +883,48 @@ cfarray_to_nsarray(CFArrayRef in)
 
 @end
 
-void
-X11ApplicationSetWindowMenu(int nitems, const char **items,
-                            const char *shortcuts)
+static NSArray *
+array_with_strings_and_numbers(int nitems, const char **items,
+                               const char *numbers)
 {
-    @autoreleasepool {
-        NSMutableArray <NSArray <NSString *> *> * const allMenuItems = [NSMutableArray array];
+    NSMutableArray *array, *subarray;
+    NSString *string, *number;
+    int i;
 
-        for (int i = 0; i < nitems; i++) {
-            NSMutableArray <NSString *> * const menuItem = [NSMutableArray array];
-            [menuItem addObject:@(items[i])];
+    array = [[[NSMutableArray alloc] initWithCapacity:nitems] autorelease];
 
-            if (shortcuts[i] == 0) {
-                [menuItem addObject:@""];
-            } else {
-                [menuItem addObject:[NSString stringWithFormat:@"%d", shortcuts[i]]];
-            }
+    for (i = 0; i < nitems; i++) {
+        subarray = [[NSMutableArray alloc] initWithCapacity:2];
 
-            [allMenuItems addObject:menuItem];
+        string = [[NSString alloc] initWithUTF8String:items[i]];
+        [subarray addObject:string];
+        [string release];
+
+        if (numbers[i] != 0) {
+            number = [[NSString alloc] initWithFormat:@"%d", numbers[i]];
+            [subarray addObject:number];
+            [number release];
         }
+        else
+            [subarray addObject:@""];
+
+        [array addObject:subarray];
+        [subarray release];
+    }
+
+    return array;
+}
+
+void
+X11ApplicationSetWindowMenu(int nitems, const char **items,
+                            const char *shortcuts)
+{
+    @autoreleasepool {
+        NSArray *array = array_with_strings_and_numbers(nitems, items, shortcuts);
 
+        /* Send the array of strings over to the appkit thread */
         dispatch_async(dispatch_get_main_queue(), ^{
-            [X11App.controller set_window_menu:allMenuItems];
+            [X11App set_window_menu:array];
         });
     }
 }
@@ -1102,7 +1122,7 @@ X11ApplicationMain(int argc, char **argv, char **envp)
         QuartzModeBundleInit();
 
         /* Calculate the height of the menubar so we can avoid it. */
-        aquaMenuBarHeight = NSApp.mainMenu.menuBarHeight;
+        aquaMenuBarHeight = [[NSApp mainMenu] menuBarHeight];
         if (!aquaMenuBarHeight) {
             NSScreen* primaryScreen = NSScreen.screens[0];
             aquaMenuBarHeight = NSHeight(primaryScreen.frame) - NSMaxY(primaryScreen.visibleFrame);
