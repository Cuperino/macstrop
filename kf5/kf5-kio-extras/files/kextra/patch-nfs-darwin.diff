diff --git a/CMakeLists.txt b/CMakeLists.txt
index 57e04973a202a7badb312756da342d8284d9f3e9..754a5b50e49e2874f71ff7cda496a822c92d44f4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -141,10 +141,12 @@ if(UNIX)
                            PURPOSE "Needed to build the man kioslave"
                            )
 
-    find_package(TIRPC)
-    set_package_properties(TIRPC PROPERTIES TYPE OPTIONAL
-                           PURPOSE "Needed to build the NFS kioslave"
-                           )
+    if (NOT APPLE)
+        find_package(TIRPC)
+        set_package_properties(TIRPC PROPERTIES TYPE OPTIONAL
+                               PURPOSE "Needed to build the NFS kioslave"
+                               )
+    endif ()
 else()
     # FIXME: on windows we ignore support until trash gets integrated
 endif()
@@ -189,7 +191,7 @@ if(NOT WIN32)
    if(Gperf_FOUND)
      add_subdirectory( man )
    endif()
-   if(TIRPC_FOUND)
+   if(TIRPC_FOUND OR APPLE)
      add_subdirectory( nfs )
    endif()
 endif()
diff --git a/nfs/CMakeLists.txt b/nfs/CMakeLists.txt
index 7189b25a3269c7710df6fb8201ba71578ff62527..27a237be1da0c5dc0dc80e258716f6e1a63cfe08 100644
--- a/nfs/CMakeLists.txt
+++ b/nfs/CMakeLists.txt
@@ -1,32 +1,38 @@
-## Check for XDR functions
-include(CheckCXXSymbolExists)
-
-set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${TIRPC_LIBRARIES})
-set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${TIRPC_INCLUDE_DIRS})
-check_cxx_symbol_exists(xdr_u_int64_t "rpc/xdr.h" HAVE_XDR_U_INT64_T)
-check_cxx_symbol_exists(xdr_uint64_t "rpc/xdr.h" HAVE_XDR_UINT64_T)
-check_cxx_symbol_exists(xdr_u_hyper "rpc/xdr.h" HAVE_XDR_U_HYPER)
-check_cxx_symbol_exists(xdr_u_longlong_t "rpc/xdr.h" HAVE_XDR_U_LONGLONG_T)
-
-if (NOT HAVE_XDR_U_INT64_T AND NOT HAVE_XDR_UINT64_T AND NOT HAVE_XDR_U_HYPER AND NOT HAVE_XDR_U_LONGLONG_T)
-    message(FATAL_ERROR "Could not find 64-bit XDR datatype functions!")
-endif (NOT HAVE_XDR_U_INT64_T AND NOT HAVE_XDR_UINT64_T AND NOT HAVE_XDR_U_HYPER AND NOT HAVE_XDR_U_LONGLONG_T)
-
-if (HAVE_XDR_U_INT64_T)
+if (NOT APPLE)
+    ## Check for XDR functions
+    include(CheckCXXSymbolExists)
+
+    set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} ${TIRPC_LIBRARIES})
+    set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${TIRPC_INCLUDE_DIRS})
+    check_cxx_symbol_exists(xdr_u_int64_t "rpc/xdr.h" HAVE_XDR_U_INT64_T)
+    check_cxx_symbol_exists(xdr_uint64_t "rpc/xdr.h" HAVE_XDR_UINT64_T)
+    check_cxx_symbol_exists(xdr_u_hyper "rpc/xdr.h" HAVE_XDR_U_HYPER)
+    check_cxx_symbol_exists(xdr_u_longlong_t "rpc/xdr.h" HAVE_XDR_U_LONGLONG_T)
+
+    if (NOT HAVE_XDR_U_INT64_T AND NOT HAVE_XDR_UINT64_T AND NOT HAVE_XDR_U_HYPER AND NOT HAVE_XDR_U_LONGLONG_T)
+        message(FATAL_ERROR "Could not find 64-bit XDR datatype functions!")
+    endif (NOT HAVE_XDR_U_INT64_T AND NOT HAVE_XDR_UINT64_T AND NOT HAVE_XDR_U_HYPER AND NOT HAVE_XDR_U_LONGLONG_T)
+
+    if (HAVE_XDR_U_INT64_T)
+        add_definitions(-DHAVE_XDR_U_INT64_T)
+    endif (HAVE_XDR_U_INT64_T)
+    if (HAVE_XDR_UINT64_T)
+        add_definitions(-DHAVE_XDR_UINT64_T)
+    endif (HAVE_XDR_UINT64_T)
+    if (HAVE_XDR_U_HYPER)
+        add_definitions(-DHAVE_XDR_U_HYPER)
+    endif (HAVE_XDR_U_HYPER)
+    if (HAVE_XDR_U_LONGLONG_T)
+        add_definitions(-DHAVE_XDR_U_LONGLONG_T)
+    endif (HAVE_XDR_U_LONGLONG_T)
+    include_directories(${TIRPC_INCLUDE_DIRS})
+else()
     add_definitions(-DHAVE_XDR_U_INT64_T)
-endif (HAVE_XDR_U_INT64_T)
-if (HAVE_XDR_UINT64_T)
-    add_definitions(-DHAVE_XDR_UINT64_T)
-endif (HAVE_XDR_UINT64_T)
-if (HAVE_XDR_U_HYPER)
     add_definitions(-DHAVE_XDR_U_HYPER)
-endif (HAVE_XDR_U_HYPER)
-if (HAVE_XDR_U_LONGLONG_T)
     add_definitions(-DHAVE_XDR_U_LONGLONG_T)
-endif (HAVE_XDR_U_LONGLONG_T)
+endif()
 
 add_definitions(-DTRANSLATION_DOMAIN=\"kio5_nfs\")
-include_directories(${TIRPC_INCLUDE_DIRS})
 
 add_library(kio_nfs MODULE kio_nfs.cpp nfsv2.cpp nfsv3.cpp rpc_nfs3_prot_xdr.c rpc_nfs2_prot_xdr.c)
 target_link_libraries(kio_nfs KF5::KIOCore KF5::I18n Qt5::Network ${TIRPC_LIBRARIES})
