diff --git plugins/quickopen/expandingtree/expandingtree.cpp plugins/quickopen/expandingtree/expandingtree.cpp
index a8ce85fe6c..fa38b1ba86 100644
--- plugins/quickopen/expandingtree/expandingtree.cpp
+++ plugins/quickopen/expandingtree/expandingtree.cpp
@@ -86,3 +86,10 @@ void ExpandingTree::drawBranches(QPainter* painter, const QRect& rect, const QMo
     }
     QTreeView::drawBranches(painter, rect, index);
 }
+
+// void ExpandingTree::scrollTo(const QModelIndex index, QAbstractItemView::ScrollHint hint)
+// {
+//     QTreeView::scrollTo(index, hint);
+// }
+
+// #include "moc_expandingtree.cpp"
diff --git plugins/quickopen/expandingtree/expandingtree.h plugins/quickopen/expandingtree/expandingtree.h
index 4a484fbb2b..4619defb3b 100644
--- plugins/quickopen/expandingtree/expandingtree.h
+++ plugins/quickopen/expandingtree/expandingtree.h
@@ -37,6 +37,9 @@ public:
     };
 
     void setModel(QAbstractItemModel* model) override;
+public Q_SLOTS:
+//     void scrollTo(const QModelIndex, QAbstractItemView::ScrollHint = EnsureVisible);
+
 protected:
     void drawRow (QPainter* painter, const QStyleOptionViewItem& option, const QModelIndex& index) const override;
     int sizeHintForColumn (int column) const override;
diff --git plugins/quickopen/expandingtree/expandingwidgetmodel.cpp plugins/quickopen/expandingtree/expandingwidgetmodel.cpp
index a9ae863e40..f662c254ff 100644
--- plugins/quickopen/expandingtree/expandingwidgetmodel.cpp
+++ plugins/quickopen/expandingtree/expandingwidgetmodel.cpp
@@ -399,7 +399,8 @@ void ExpandingWidgetModel::setExpanded(const QModelIndex& idx_, bool expanded)
         emit dataChanged(idx, idx);
 
         if (treeView()) {
-            treeView()->scrollTo(mapFromSource(idx));
+            const auto map = mapFromSource(idx);
+            treeView()->scrollTo(map);
         }
     }
 }
diff --git plugins/quickopen/quickopenplugin.cpp plugins/quickopen/quickopenplugin.cpp
index cb4f0e1085..57003daa6a 100644
--- plugins/quickopen/quickopenplugin.cpp
+++ plugins/quickopen/quickopenplugin.cpp
@@ -869,7 +869,7 @@ struct CreateOutlineDialog
                     // already called 'widget->show()'.
                     auto list = dialog->widget()->ui.list;
                     QMetaObject::invokeMethod(list, "setCurrentIndex", Qt::QueuedConnection, Q_ARG(QModelIndex, index));
-                    QMetaObject::invokeMethod(list, "scrollTo", Qt::QueuedConnection, Q_ARG(QModelIndex, index), Q_ARG(QAbstractItemView::ScrollHint, QAbstractItemView::PositionAtCenter));
+//                     QMetaObject::invokeMethod(list, "scrollTo", Qt::QueuedConnection, Q_ARG(const QModelIndex, index), Q_ARG(QAbstractItemView::ScrollHint, QAbstractItemView::PositionAtCenter));
                 }
                 ++num;
             }
@@ -1089,6 +1089,15 @@ bool QuickOpenLineEdit::eventFilter(QObject* obj, QEvent* e)
             return true; // eat event
         }
         break;
+    case QEvent::MouseButtonRelease:
+        if (obj == this) {
+            if (--m_newlyOpened == 0) {
+                deactivate();
+                e->accept();
+                return true; // eat event
+            }
+        }
+        break;
     case QEvent::WindowActivate:
     case QEvent::WindowDeactivate:
         QMetaObject::invokeMethod(this, "checkFocus", Qt::QueuedConnection);
@@ -1137,6 +1146,7 @@ void QuickOpenLineEdit::activate()
     qCDebug(PLUGIN_QUICKOPEN) << "activating";
     setText(QString());
     setStyleSheet(QString());
+    m_newlyOpened = 2;
     qApp->installEventFilter(this);
 }
 void QuickOpenLineEdit::deactivate()
diff --git plugins/quickopen/quickopenplugin.h plugins/quickopen/quickopenplugin.h
index 84f9db5f30..ae028fa509 100644
--- plugins/quickopen/quickopenplugin.h
+++ plugins/quickopen/quickopenplugin.h
@@ -156,6 +156,7 @@ private:
 
     QPointer<QuickOpenWidget> m_widget;
     bool m_forceUpdate;
+    int m_newlyOpened;
     QuickOpenWidgetCreator* m_widgetCreator;
 };
 
