diff --git a/CMakeLists.txt b/CMakeLists.txt
index b3cf606..167343e 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -9,7 +9,8 @@ set(CMAKE_CXX_STANDARD 14)
 set(CMAKE_CXX_STANDARD_REQUIRED ON)
 
 # ECM setup
-set(KF5_MIN_VERSION "5.75.0")
+set(KF5_MIN_VERSION "5.60.0")
+set(KF5PIM_MIN_VERSION "5.12.2")
 
 find_package(ECM ${KF5_MIN_VERSION} CONFIG REQUIRED)
 set(CMAKE_MODULE_PATH ${ECM_MODULE_PATH})
@@ -36,7 +37,7 @@ ecm_setup_version(PROJECT
 )
 
 ############## Find Packages ##############
-set(QT_REQUIRED_VERSION "5.13.0")
+set(QT_REQUIRED_VERSION "5.9.8")
 find_package(Qt5 ${QT_REQUIRED_VERSION} REQUIRED COMPONENTS
     Core
     Network
@@ -48,8 +49,8 @@ find_package(KF5 ${KF5_MIN_VERSION} REQUIRED COMPONENTS
     Wallet
 )
 
-find_package(KF5CalendarCore ${KF5_MIN_VERSION} CONFIG REQUIRED)
-find_package(KF5Contacts ${KF5_MIN_VERSION} CONFIG REQUIRED)
+find_package(KF5CalendarCore ${KF5PIM_MIN_VERSION} CONFIG REQUIRED)
+find_package(KF5Contacts ${KF5PIM_MIN_VERSION} CONFIG REQUIRED)
 
 find_package(Sasl2)
 set_package_properties(Sasl2 PROPERTIES TYPE REQUIRED)
diff --git a/KPimGAPIConfig.cmake.in b/KPimGAPIConfig.cmake.in
index 366c296..2b43b14 100644
--- a/KPimGAPIConfig.cmake.in
+++ b/KPimGAPIConfig.cmake.in
@@ -2,8 +2,8 @@
 
 include(CMakeFindDependencyMacro)
 
-find_dependency(KF5CalendarCore "@KF5_MIN_VERSION@")
-find_dependency(KF5Contacts "@KF5_MIN_VERSION@")
+find_dependency(KF5CalendarCore "@KF5PIM_MIN_VERSION@")
+find_dependency(KF5Contacts "@KF5PIM_MIN_VERSION@")
 
 if (@KGAPI_KF5_COMPAT@)
     message(WARNING "\n"
diff --git a/src/calendar/calendar.cpp b/src/calendar/calendar.cpp
index ac10c73..d293ce6 100644
--- a/src/calendar/calendar.cpp
+++ b/src/calendar/calendar.cpp
@@ -38,7 +38,7 @@ Calendar::Calendar() :
 
 Calendar::Calendar(const Calendar &other) :
     Object(other),
-    d(new Private(*(other.d.get())))
+    d(new Private(*(other.d.data())))
 {
 }
 
diff --git a/src/calendar/calendarservice.cpp b/src/calendar/calendarservice.cpp
index 9044a4c..f239504 100644
--- a/src/calendar/calendarservice.cpp
+++ b/src/calendar/calendarservice.cpp
@@ -1076,7 +1076,7 @@ QString Private::checkAndConverCDOTZID(const QString &tzid, const EventPtr& even
     const QStringList properties = vcard.split(QLatin1Char('\n'));
     int CDOId = -1;
     for (const QString &property : properties) {
-        if (property.startsWith(u"X-MICROSOFT-CDO-TZID")) {
+        if (property.startsWith(QStringLiteral(u"X-MICROSOFT-CDO-TZID"))) {
             QStringList parsed = property.split(QLatin1Char(':'));
             if (parsed.length() != 2) {
                 break;
diff --git a/src/tasks/task.cpp b/src/tasks/task.cpp
index afc9603..691e3ae 100644
--- a/src/tasks/task.cpp
+++ b/src/tasks/task.cpp
@@ -33,7 +33,7 @@ Task::Task():
 Task::Task(const Task& other):
     Object(other),
     KCalendarCore::Todo(other),
-    d(new Private(*(other.d.get())))
+    d(new Private(*(other.d.data())))
 {
 }
 
diff --git a/src/tasks/tasklist.cpp b/src/tasks/tasklist.cpp
index 1ace8cf..31bf6fb 100644
--- a/src/tasks/tasklist.cpp
+++ b/src/tasks/tasklist.cpp
@@ -31,7 +31,7 @@ TaskList::TaskList():
 
 TaskList::TaskList (const TaskList& other):
     Object(other),
-    d(new Private(*(other.d.get())))
+    d(new Private(*(other.d.data())))
 {
 }
 
diff --git a/autotests/fakeauthbrowser.cpp b/autotests/fakeauthbrowser.cpp
index 3539d6b22b4fc2120ad090a9fe3b6b3b2c1f3cf7..91f2c8cb7c2b4db170c209670066fc117af42476 100644
--- a/autotests/fakeauthbrowser.cpp
+++ b/autotests/fakeauthbrowser.cpp
@@ -49,7 +49,7 @@ public Q_SLOTS:
 FakeAuthBrowser::FakeAuthBrowser()
     : d(new FakeAuthBrowser::Private)
 {
-    QDesktopServices::setUrlHandler(QStringLiteral("https"), d.get(), "openUrl");
+    QDesktopServices::setUrlHandler(QStringLiteral("https"), d.data(), "openUrl");
 }
 
 FakeAuthBrowser::~FakeAuthBrowser()
diff --git a/src/core/private/fullauthenticationjob.cpp b/src/core/private/fullauthenticationjob.cpp
index dd786e1..782872f 100644
--- a/src/core/private/fullauthenticationjob.cpp
+++ b/src/core/private/fullauthenticationjob.cpp
@@ -141,7 +141,11 @@ public:
     QString mSecretKey;
     QString mUsername;
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 13, 0)
     std::unique_ptr<QTcpServer> mServer;
+#else
+    QTcpServer *mServer;
+#endif
     QTcpSocket *mConnection = nullptr;
     uint16_t mServerPort = 0;
 
@@ -157,7 +161,17 @@ FullAuthenticationJob::FullAuthenticationJob(const AccountPtr &account, const QS
 {
 }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 13, 0)
 FullAuthenticationJob::~FullAuthenticationJob() = default;
+#else
+FullAuthenticationJob::~FullAuthenticationJob()
+{
+    //qWarning() << Q_FUNC_INFO << "Deleting" << this << "and" << d;
+    //qWarning() << "scopes:" << d->mAccount->scopes();
+    d->mAccount->setScopes({});
+    delete d;
+}
+#endif
 
 void FullAuthenticationJob::setServerPort(uint16_t port)
 {
@@ -191,14 +205,24 @@ void FullAuthenticationJob::start()
         scopes << scope.toString();
     }
 
+#if QT_VERSION >= QT_VERSION_CHECK(5, 13, 0)
     d->mServer = std::make_unique<QTcpServer>(this);
+#else
+    d->mServer = new QTcpServer(this);
+#endif
     if (!d->mServer->listen(QHostAddress::LocalHost, d->mServerPort)) {
         d->emitError(InvalidAccount, tr("Could not start OAuth HTTP server"));
         return;
     }
     d->mServerPort = d->mServer->serverPort();
+#if QT_VERSION >= QT_VERSION_CHECK(5, 13, 0)
     connect(d->mServer.get(), &QTcpServer::acceptError, this, [this](QAbstractSocket::SocketError e) { d->socketError(e); });
-    connect(d->mServer.get(), &QTcpServer::newConnection, this, [this]() {
+    connect(d->mServer.get(), &QTcpServer::newConnection, this, [this]()
+#else
+    connect(d->mServer, &QTcpServer::acceptError, this, [this](QAbstractSocket::SocketError e) { d->socketError(e); });
+    connect(d->mServer, &QTcpServer::newConnection, this, [this]()
+#endif
+    {
         d->mConnection = d->mServer->nextPendingConnection();
         d->mConnection->setParent(this);
 #if QT_VERSION < QT_VERSION_CHECK(5, 15, 0)
diff --git a/src/core/private/fullauthenticationjob_p.h b/src/core/private/fullauthenticationjob_p.h
index 5cdbb6f..de797d0 100644
--- a/src/core/private/fullauthenticationjob_p.h
+++ b/src/core/private/fullauthenticationjob_p.h
@@ -38,7 +38,11 @@ protected:
 
 private:
     class Private;
+#if QT_VERSION < QT_VERSION_CHECK(5, 13, 0)
+    Private *d;
+#else
     const QScopedPointer<Private> d;
+#endif
     friend class Private;
 };
 
