diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8e0909a0..9ea1f728 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -8,7 +8,7 @@ if (SAILFISHOS)
     set(QCA_MIN_VERSION "2.0.0")
 else()
     set(KF5_MIN_VERSION "5.48.0")
-    set(QT_MIN_VERSION "5.10.0")
+    set(QT_MIN_VERSION "5.9.8")
     set(QCA_MIN_VERSION "2.1.0")
 endif()
 
diff --git a/plugins/share/shareplugin.cpp b/plugins/share/shareplugin.cpp
index d42b563d..1ea30a3b 100644
--- a/plugins/share/shareplugin.cpp
+++ b/plugins/share/shareplugin.cpp
@@ -38,6 +38,10 @@
 #include "core/filetransferjob.h"
 #include "core/daemon.h"
 
+#if QT_VERSION < QT_VERSION_CHECK(5, 10, 0)
+#include <utime.h>
+#endif
+
 K_PLUGIN_CLASS_WITH_JSON(SharePlugin, "kdeconnect_share.json")
 
 Q_LOGGING_CATEGORY(KDECONNECT_PLUGIN_SHARE, "kdeconnect.plugin.share")
@@ -89,7 +93,17 @@ void SharePlugin::setDateModified(const QUrl& destination, const qint64 timestam
     if (!receivedFile.exists() || !receivedFile.open(QIODevice::ReadWrite | QIODevice::Text)) {
         return;
     }
+#if QT_VERSION >= QT_VERSION_CHECK(5, 10, 0)
     receivedFile.setFileTime(QDateTime::fromMSecsSinceEpoch(timestamp), QFileDevice::FileTime(QFileDevice::FileModificationTime));
+#else
+    const auto fname = destination.toLocalFile();
+    struct utimbuf utbuf;
+    QT_STATBUF buff;
+    QT_STAT(QFile::encodeName(fname), &buff);
+    utbuf.actime = buff.st_atime; // access time, unchanged
+    utbuf.modtime = QDateTime::fromMSecsSinceEpoch(timestamp).toTime_t(); // modification time
+    utime(QFile::encodeName(fname), &utbuf);
+#endif
 }
 
 bool SharePlugin::receivePacket(const NetworkPacket& np)
diff --git a/smsapp/main.cpp b/smsapp/main.cpp
index 3e7c7a42..0806891f 100644
--- a/smsapp/main.cpp
+++ b/smsapp/main.cpp
@@ -71,11 +71,18 @@ int main(int argc, char *argv[])
 
     QQmlApplicationEngine engine;
     engine.rootContext()->setContextObject(new KLocalizedContext(&engine));
+#if QT_VERSION < QT_VERSION_CHECK(5, 10, 0)
+    const auto ctx = engine.rootContext();
+    ctx->setContextProperty(QStringLiteral("initialMessage"), initialMessage);
+    ctx->setContextProperty(QStringLiteral("initialDevice"), deviceid);
+    ctx->setContextProperty(QStringLiteral("aboutData"), QVariant::fromValue(KAboutData::applicationData()));
+#else
     engine.rootContext()->setContextProperties({
         { QStringLiteral("initialMessage"), initialMessage },
         { QStringLiteral("initialDevice"), deviceid },
         { QStringLiteral("aboutData"), QVariant::fromValue(KAboutData::applicationData()) }
     });
+#endif
     engine.load(QUrl(QStringLiteral("qrc:/qml/main.qml")));
 
     return app.exec();
diff --git a/tests/testnotificationlistener.cpp b/tests/testnotificationlistener.cpp
index 16ca6269..6de12a4f 100644
--- a/tests/testnotificationlistener.cpp
+++ b/tests/testnotificationlistener.cpp
@@ -401,7 +401,7 @@ void TestNotificationListener::testNotify()
     // image-data is attached as png data
     QVERIFY(image.loadFromData(reinterpret_cast<const uchar*>(buffer->data().constData()), buffer->size(), "PNG"));
     // image-data has priority over image-path:
-    QCOMPARE(image.sizeInBytes(), rowStride*height);
+    QCOMPARE(image.byteCount(), rowStride*height);
     // rgba -> argb conversion was done correctly:
     COMPARE_PIXEL(0,0);
     COMPARE_PIXEL(1,0);
@@ -422,7 +422,7 @@ void TestNotificationListener::testNotify()
     // image-data is attached as png data
     QVERIFY(image.loadFromData(reinterpret_cast<const uchar*>(buffer->data().constData()), buffer->size(), "PNG"));
     // image_data has priority over image_path/image-path:
-    QCOMPARE(image.sizeInBytes(), rowStride*height);
+    QCOMPARE(image.byteCount(), rowStride*height);
     // rgba -> argb conversion was done correctly:
     COMPARE_PIXEL(0,0);
     COMPARE_PIXEL(1,0);
@@ -440,7 +440,7 @@ void TestNotificationListener::testNotify()
     buffer = dynamic_cast<QBuffer*>(d->getLastPacket()->payload().data());
     // image-data is attached as png data
     QVERIFY(image.loadFromData(reinterpret_cast<const uchar*>(buffer->data().constData()), buffer->size(), "PNG"));
-    QCOMPARE(image.sizeInBytes(), rowStride*height);
+    QCOMPARE(image.byteCount(), rowStride*height);
     // rgba -> argb conversion was done correctly:
     COMPARE_PIXEL(0,0);
     COMPARE_PIXEL(1,0);
